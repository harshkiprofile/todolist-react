{"version":3,"sources":["ListItem.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","value","index","onClick","e","foo","list","filter","arr","Number","target","className","text","App","useState","input","setInput","setList","placeholder","onChange","event","oldItem","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA2BeA,MAzBf,SAAkBC,GAUd,OACI,mCAEI,+BACI,wBACAC,MAAOD,EAAME,MACbC,QAdS,SAACC,GAClBJ,EAAMK,KAAI,WACN,OAAOL,EAAMM,KAAKC,QAAO,SAACC,EAAKN,GAC3B,OAAOA,IAAUO,OAAOL,EAAEM,OAAOT,cAYjCU,UAAU,QAHV,eADJ,IAMeX,EAAMY,WCuBlBC,MAxCf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOR,EAAP,KAAaW,EAAb,KAaA,OACE,mCACE,qBAAKN,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBACA,4CACA,uBACA,uBAAOO,YAAY,eAAeC,SAlBrB,SAACC,GACpBJ,EAASI,EAAMV,OAAOT,QAiB0CA,MAAOc,IACjE,wBAAQJ,UAAU,UAAUR,QAff,WACnBc,GAAQ,SAACI,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAoBN,OAEtBC,EAAS,KAWH,iBACA,uBACA,uBACA,uBACA,6BACGV,EAAKgB,KAAI,SAACrB,EAAOC,GACjB,OAAO,cAAC,EAAD,CAAUU,KAAMX,EAAOC,MAAOA,EAAOG,IAAKY,EAASX,KAAMA,iBCtB9DiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa41eaf6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ListItem(props){\r\n\r\n    const clickHandler = (e) => {\r\n        props.foo(() => {\r\n            return props.list.filter((arr, index) => {\r\n                return index !== Number(e.target.value);\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <li>\r\n                <button \r\n                value={props.index} \r\n                onClick={clickHandler} \r\n                className=\"cross\">\r\n                    X\r\n                </button> {props.text} \r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import './App.css';\nimport {useState} from 'react';\nimport ListItem from './ListItem';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  const inputHandler = (event) => {\n    setInput(event.target.value);\n  }\n\n  const clickHandler = () => {\n    setList((oldItem) => {\n      return [...oldItem, input]\n    })\n    setInput(\"\");\n  }\n\n  return(\n    <>\n      <div className=\"container\">\n        <div className=\"cont\">\n          <br/>\n          <h1>ToDo List </h1>\n          <br/>\n          <input placeholder=\"Add new Task\" onChange={inputHandler} value={input}/>\n          <button className=\"add-btn\" onClick={clickHandler}> + </button>\n          <br/>\n          <br/>\n          <br/>\n          <ol>\n            {list.map((value, index) => {\n             return <ListItem text={value} index={index} foo={setList} list={list}/>\n            })}\n          </ol>\n        </div>\n        \n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Form simple\n// function App() {\n\n//   const [name, setName] = useState({\n//     fname:'',\n//     lname:''\n//   });\n\n//   const onChange = (event) => {\n//     const input = event.target.name;\n\n//     if(input === \"fname\"){\n//       setName((preValue) => {\n//         return {...preValue,fname:event.target.value}\n//       })\n//     }\n//     else if(input === \"lname\"){\n//       setName((preValue) => {\n//         return {...preValue,lname:event.target.value}\n//       })\n//     }\n//   }\n\n//   const onSubmit = (event) =>{\n//     event.preventDefault();\n//   }\n\n//   return (\n//     <>\n//     <div className=\"container\">\n//       <h1>Hello {name.fname} {name.lname}</h1>\n//       <form >\n//       <input placeholder=\"First Name\" onChange={onChange} name=\"fname\"/>\n//       <input placeholder=\"Last Name\" onChange={onChange} name=\"lname\"/>\n//       <button type=\"submit\" onClick={onSubmit}>Submit</button>\n//       </form>\n//     </div>\n//     </>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}